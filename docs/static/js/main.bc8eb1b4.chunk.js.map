{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categorias","setCategorias","categoria","ReactDOM","render","document","getElementById"],"mappings":"mNAEaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACVC,mBAAS,IADC,mBACvCC,EADuC,KAC3BC,EAD2B,KAY9C,OACE,0BAAMC,SARa,SAACC,GACpBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,OAKd,2BACEO,KAAK,OACLC,MAAOT,EACPU,SAfoB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,Y,uBCLdG,EAAO,uCAAE,WAAOC,GAAP,uBAAAC,EAAA,6DACdC,EADc,iDACkCC,UAAUH,GAD5C,+DAEDI,MAAMF,GAFL,cAEdG,EAFc,gBAGCA,EAAKC,OAHN,uBAGbC,EAHa,EAGbA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAC3B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATlB,kBAabM,GAba,4CAAF,sDCCPO,EAAe,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEvC,OAEE,yBAAKc,UAAU,0CACb,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,KCHGO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECDX,SAACA,GAAc,IAAD,EACbd,mBAAS,CAClCqB,KAAK,GACLa,SAAQ,IAH8B,mBAChCC,EADgC,KACzBC,EADyB,KAexC,OATAC,qBAAU,WACRxB,EAAQC,GAAUwB,MAAM,SAAAC,GACtBH,EAAS,CACPf,KAAKkB,EACLL,SAAS,SAGb,CAACpB,IAEIqB,EDZwBK,CAAa1B,GAAhCa,EAFyB,EAE9BN,KAAaa,EAFiB,EAEjBA,QACpB,OACE,oCACE,wBAAIJ,UAAU,qCAAqChB,GAClDoB,GAAW,uBAAGJ,UAAU,oCAAb,eACZ,6BACA,yBAAKA,UAAU,aAETH,EAAOJ,KAAK,SAAAC,GAAG,OACb,kBAAC,EAAD,eACEiB,IAAKjB,EAAIC,IACLD,UEULkB,EAxBM,WAAO,IAAD,EACW1C,mBAAS,CAAC,WADrB,mBAClB2C,EADkB,KACNC,EADM,KAOzB,OACE,oCACE,mCACA,kBAAC,EAAD,CAAa7C,cAAe6C,IAC5B,6BAEA,4BAEID,EAAWpB,KAAI,SAAAsB,GAAS,OACtB,kBAAC,EAAD,CAASJ,IAAKI,EAAY/B,SAAU+B,UCbhDC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.bc8eb1b4.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\n// import PropTypes from 'prop-types'\r\nexport const AddCategory = ({setCategories}) => {\r\n  const [inputValue, setInputValue] = useState('');\r\n  const handleInputChange = (e) =>{\r\n    setInputValue(e.target.value)\r\n  }\r\n  const handleSubmit = (e) =>{\r\n    e.preventDefault()\r\n    if(inputValue.trim().length > 2){\r\n      setCategories(cats => [inputValue, ...cats]);\r\n      setInputValue('');\r\n    }\r\n  }\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        value={inputValue}\r\n        onChange={handleInputChange}\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\n// AddCategory.PropTypes = {\r\n// //   setCategories: PropTypes.func.isRequired\r\n// }\r\n","export const getGifs= async (category)=>{\r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=FEVUTNnC9YCUOK2t05ksquDDjxz3abH4`\r\n  const resp = await fetch(url);\r\n  const {data} = await resp.json();\r\n\r\n  const gifs = data.map(img => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images?.downsized_medium.url\r\n    }\r\n  })\r\n  // console.log(gifs);\r\n  return gifs;\r\n}\r\n","import React from 'react';\r\nexport const GifGridItem  = ({id, title, url}) => {\r\n  // console.log(id, title, url);\r\n  return (\r\n\r\n    <div className=\"card animate__animated animate__fadeIn\">\r\n      <img src={url} alt={title}/>\r\n      <p>{title}</p>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport {useFetchGifs} from \"../hooks/useFetchGifs\";\r\nimport {GifGridItem} from \"./GifGridItem\";\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n  const {data:images, loading} = useFetchGifs(category);\r\n  return (\r\n    <>\r\n      <h3 className='animate__animated animate__fadeIn'>{category}</h3>\r\n      {loading && <p className='animate__animated animate__flash'>Cargando...</p>}\r\n      <br/>\r\n      <div className='card-grid'>\r\n          {\r\n            images.map( img => (\r\n              <GifGridItem\r\n                key={img.id}\r\n                {...img}\r\n              />\r\n            ))\r\n          }\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import {useEffect, useState} from \"react\";\r\nimport {getGifs} from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n  const [ state, setState] = useState({\r\n    data:[],\r\n    loading:true\r\n  });\r\n\r\n  useEffect(()=>{\r\n    getGifs(category).then( imgs =>{\r\n      setState({\r\n        data:imgs,\r\n        loading: false\r\n      })\r\n    });\r\n  },[category]);\r\n\r\n  return state;\r\n}\r\n","import React, {useState} from 'react';\r\nimport {AddCategory} from \"./components/AddCategory\";\r\nimport {GifGrid} from \"./components/GifGrid\";\r\nconst GifExpertApp = () => {\r\n  const [categorias, setCategorias] = useState(['conejo'])\r\n  // ejemplo de manejo de HOOKs\r\n  // const handleApp = () => {\r\n  //   setCategorias([...categorias, 'Nuevo Registro'])\r\n  // }\r\n\r\n  return (\r\n    <>\r\n      <h2>APP</h2>\r\n      <AddCategory setCategories={setCategorias}/>\r\n      <hr/>\r\n      {/*<button onClick={handleApp}>Agregar</button>*/}\r\n      <ol>\r\n        {\r\n          categorias.map(categoria => (\r\n            <GifGrid key={categoria}  category={categoria}/>\r\n          ))\r\n        }\r\n      </ol>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'animate.css';\nimport GifExpertApp from \"./GifExpertApp\";\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}